{{- if .Values.mcpServers.alpaca.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mcpServers.alpaca.name }}
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
  labels:
    {{- include "stockripperv2.labels" . | nindent 4 }}
    app.kubernetes.io/component: mcp-server
    app.kubernetes.io/name: alpaca-mcp
spec:
  replicas: {{ .Values.mcpServers.alpaca.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: alpaca-mcp
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: alpaca-mcp
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: mcp-server
    spec:
      containers:
        - name: alpaca-mcp
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.mcpServers.alpaca.image.repository }}:{{ .Values.mcpServers.alpaca.image.tag }}"
          imagePullPolicy: {{ .Values.mcpServers.alpaca.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.mcpServers.alpaca.service.targetPort }}
              protocol: TCP
          env:
            - name: PORT
              value: "{{ .Values.mcpServers.alpaca.service.targetPort }}"
            - name: ALPACA_API_KEY
              valueFrom:
                secretKeyRef:
                  name: alpaca-secret
                  key: api-key
            - name: ALPACA_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: alpaca-secret
                  key: secret-key
            - name: ALPACA_BASE_URL
              value: "{{ .Values.marketAnalyst.env.ALPACA_BASE_URL }}"
            - name: LOG_LEVEL
              value: "{{ .Values.env.logging.level }}"
            - name: LOG_FORMAT
              value: "{{ .Values.env.logging.format }}"
          resources:
            {{- toYaml .Values.mcpServers.alpaca.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
{{- end }}

# Contains AI-generated edits.
